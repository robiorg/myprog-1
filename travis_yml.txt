language: rust 
rust:
     - stable
     - nightly
sudo: false
script: 
     - cargo build
     - cargo test
     - cargo run
deploy:
skip_cleanup: true
after_success:
  - eval "$(ssh-agent -s)" #start the ssh agent
  - chmod 600 .travis/deploy_key.pem # this key should have push access
  - ssh-add .travis/deploy_key.pem
  - git remote add deploy DEPLOY_REPO_URI_GOES_HERE
  - git push deploy
 
 env:
  global:
    - "FTP_USER=user"
    - "FTP_PASSWORD=password"
after_success:
    "curl --ftp-create-dirs -T uploadfilename -u $FTP_USER:$FTP_PASSWORD ftp://sitename.com/directory/myfile" 
  

deploy:
  provider: script
  script: scripts/deploy.sh
  on:
  	branch: develop
 --------neues Beispiel ------------
 
 language: rust
sudo: false

matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
      - rust: 1.3.0 # minimum supported rustc version
        env: FEATURES="--no-default-features"
      - rust: stable
      - rust: beta
      - rust: nightly

before_script:
  - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH


script:
  - |
      travis-cargo build -- $FEATURES &&
      travis-cargo test -- $FEATURES &&
      travis-cargo doc -- $FEATURES &&
      echo "Testing README" &&
      rustdoc --test README.md -L dependency=./target/debug/deps --extern nickel=./target/debug/libnickel.rlib

after_success:
  - |
      (echo "docs.nickel.rs" > target/doc/CNAME) &&
      travis-cargo --only stable doc-upload

env:
  global:
    secure: nPXTdkq9TK4LmqJWqB4jxscDG1mnqJzO0UX5ni+oC0SohjgBxdWjbvJ8Kthk3c8Qg/2zGlCryuT1lV4TcD3jF86MHlRlXsO3G8fCbEGdLLzppbV0A2VnEw1knhv2mfUhxA8hsFJE2ncT5qeOVyQ6N3PAMGoYkdhhbD9N/9EWuqs=


